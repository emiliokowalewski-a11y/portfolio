const translations = {
  pl: {
    nav: { projects: "Projekty", about: "O mnie", contact: "Kontakt" },
    hero: { title: "Projektowanie PCB • Symulacje LTspice", subtitle: "Niezawodny inżynier elektroniki tworzący solidne PCB i dokładne symulacje.", ctaWork: "Zobacz pracę", ctaQuote: "Poproś o wycenę" },
    projects: { title: "Wybrane projekty", desc: "" },
    about: { title: "O mnie", p1: "Jestem inżynierem elektroniki z ponad 8-letnim doświadczeniem w elektronice analogowej i 4-letnim w projektach cyfrowych.", p2: "Skupiam się na zasilaczach, elektronice audio oraz modelowaniu i symulacjach w LTspice." },
    contact: { title: "Kontakt", email: "Email: skorski.6a.20.2012@wp.pl", quote: "Poproś o wycenę" },
    langName: "Polski"
  },
  en: {
    nav: { projects: "Projects", about: "About", contact: "Contact" },
    hero: { title: "PCB Design • LTspice Simulation", subtitle: "Reliable Electronics Engineer crafting robust PCBs and accurate simulations.", ctaWork: "View Work", ctaQuote: "Get a Quote" },
    projects: { title: "Selected Projects", desc: "" },
    about: { title: "About", p1: "I am an electronics engineer with over 8 years of experience in analog electronics and 4 years in digital design.", p2: "My focus: power supply circuits, audio electronics and LTspice modeling." },
    contact: { title: "Contact", email: "Email: skorski.6a.20.2012@wp.pl", quote: "Get a Quote" },
    langName: "English"
  }
};

const supported = ["pl","en"];
let lang = "pl";

function getT(path){ const parts = path.split("."); return parts.reduce((o,k)=>o && o[k], translations[lang]); }

function applyTranslations(){
  document.getElementById("nav-projects").textContent = getT("nav.projects");
  document.getElementById("nav-about").textContent = getT("nav.about");
  document.getElementById("nav-contact").textContent = getT("nav.contact");
  document.getElementById("hero-title").textContent = getT("hero.title");
  document.getElementById("hero-subtitle").textContent = getT("hero.subtitle");
  document.getElementById("hero-cta-work").textContent = getT("hero.ctaWork");
  document.getElementById("hero-cta-quote").textContent = getT("hero.ctaQuote");
  document.getElementById("projects-title").textContent = getT("projects.title");
  document.getElementById("projects-desc").textContent = getT("projects.desc") || "";
  document.getElementById("about-title").textContent = getT("about.title");
  document.getElementById("about-p1").textContent = getT("about.p1");
  document.getElementById("about-p2").textContent = getT("about.p2");
  document.getElementById("contact-title").textContent = getT("contact.title");
  document.getElementById("contact-email").textContent = getT("contact.email");
  document.getElementById("contact-quote").textContent = getT("contact.quote");
  document.getElementById("year").textContent = new Date().getFullYear();
}

function setupLangSelector(){
  const sel = document.getElementById("lang-select");
  supported.forEach(l=>{
    const opt = document.createElement("option");
    opt.value = l;
    opt.textContent = translations[l].langName;
    sel.appendChild(opt);
  });
  sel.value = lang;
  sel.addEventListener("change", (e)=>{ lang = e.target.value; try{ localStorage.setItem("site_lang", lang); }catch{} document.documentElement.lang = lang; applyTranslations(); });
}

function detectLanguage(){
  try{ const q = new URLSearchParams(window.location.search).get("lang"); if(q && supported.includes(q)){ lang = q; document.documentElement.lang = q; return; } }catch(e){}
  try{ const s = localStorage.getItem("site_lang"); if(s && supported.includes(s)){ lang = s; document.documentElement.lang = s; return; } }catch(e){}
  try{ const nav = (navigator.language || "pl").slice(0,2); if(supported.includes(nav)){ lang = nav; document.documentElement.lang = nav; return; } }catch(e){}
  lang = "pl"; document.documentElement.lang = "pl";
}

function scrollReveal(){
  const items = document.querySelectorAll(".reveal");
  const obs = new IntersectionObserver(entries=>{ entries.forEach(en=>{ if(en.isIntersecting) en.target.classList.add("visible"); }); },{threshold:0.12});
  items.forEach(i=>obs.observe(i));
}

function scrollToTop(){ window.scrollTo({top:0,behavior:"smooth"}); }

document.addEventListener("DOMContentLoaded", ()=>{
  detectLanguage();
  setupLangSelector();
  applyTranslations();
  scrollReveal();
});
